import { Component } from "eightbittr/lib/Component";
import { IArea, IMap, IPreThingsContainers } from "mapscreatr/lib/IMapsCreatr";
import { ICommand } from "worldseedr/lib/IWorldSeedr";

import { GameStartr } from "./GameStartr";

/**
 * Maps functions used by IGameStartr instances.
 */
export abstract class Maps<TEightBittr extends GameStartr> extends Component<TEightBittr> {
    /**
     * Sets the current location.
     */
    public abstract setLocation(...args: any[]): any;

    /**
     * Sets the current map.
     */
    public abstract setMap(...args: any[]): any;

    /**
     * Spawns all Things within a given area that should be there. 
     * 
     * @param this
     * @param direction   The direction spawning comes from.
     * @param top   A top boundary to spawn within.
     * @param right   A right boundary to spawn within.
     * @param bottom   A bottom boundary to spawn within.
     * @param left   A left boundary to spawn within.
     * @remarks This is generally called by a QuadsKeepr during a screen update.
     */
    public onAreaSpawn(direction: string, top: number, right: number, bottom: number, left: number): void {
        this.eightBitter.areaSpawner.spawnArea(
            direction,
            (top + this.eightBitter.mapScreener.top) / this.eightBitter.unitsize,
            (right + this.eightBitter.mapScreener.left) / this.eightBitter.unitsize,
            (bottom + this.eightBitter.mapScreener.top) / this.eightBitter.unitsize,
            (left + this.eightBitter.mapScreener.left) / this.eightBitter.unitsize
        );
    }

    /**
     * "Unspawns" all Things within a given area that should be gone by marking
     * their PreThings as not in game.
     * 
     * @param this
     * @param direction   The direction spawning comes from.
     * @param top   A top boundary to spawn within.
     * @param right   A right boundary to spawn within.
     * @param bottom   A bottom boundary to spawn within.
     * @param left   A left boundary to spawn within.
     * @remarks This is generally called by a QuadsKeepr during a screen update.
     */
    public onAreaUnspawn(direction: string, top: number, right: number, bottom: number, left: number): void {
        this.eightBitter.areaSpawner.unspawnArea(
            direction,
            (top + this.eightBitter.mapScreener.top) / this.eightBitter.unitsize,
            (right + this.eightBitter.mapScreener.left) / this.eightBitter.unitsize,
            (bottom + this.eightBitter.mapScreener.top) / this.eightBitter.unitsize,
            (left + this.eightBitter.mapScreener.left) / this.eightBitter.unitsize
        );
    }

    /**
     * Runs through commands generated by a WorldSeedr and evaluates all of 
     * to create PreThings via MapsCreator.analyzePreSwitch. 
     * 
     * @param this
     * @param generatedCommands   Commands generated by WorldSeedr.generateFull.
     */
    public placeRandomCommands(generatedCommands: ICommand[]): void {
        const prethings: IPreThingsContainers = this.eightBitter.areaSpawner.getPreThings();
        const area: IArea = this.eightBitter.areaSpawner.getArea();
        const map: IMap = this.eightBitter.areaSpawner.getMap();

        for (const command of generatedCommands) {
            const output: any = {
                thing: command.title,
                x: command.left,
                y: command.top
            };

            if (command.arguments) {
                this.eightBitter.utilities.proliferateHard(output, command.arguments, true);
            }

            this.eightBitter.mapsCreator.analyzePreSwitch(output, prethings, area, map);
        }
    }
}
