version: 2.1

references:
    default_env: &default_env
        docker:
            - image: circleci/node:14.4.0

    repo_cache_key_1: &repo_cache_key_1 v1-repo-{{ checksum "yarn.lock" }}-{{ .Branch }}-{{ .Revision }}
    repo_cache_key_2: &repo_cache_key_2 v1-repo-{{ checksum "yarn.lock" }}-{{ .Branch }}
    repo_cache_key_3: &repo_cache_key_3 v1-repo-{{ checksum "yarn.lock" }}

    restore_repo_cache: &restore_repo_cache
        restore_cache:
            keys:
                - *repo_cache_key_1
                - *repo_cache_key_2
                - *repo_cache_key_3

    save_repo_cache: &save_repo_cache
        save_cache:
            key: *repo_cache_key_1
            paths:
                - node_modules
                - packages/*/node_modules

jobs:
    checkout:
        <<: *default_env
        steps:
            - checkout
            - *restore_repo_cache
            - run: yarn --production=false --frozen-lockfile
            - *save_repo_cache

    compile:
        <<: *default_env
        steps:
            - checkout
            - *restore_repo_cache
            - run: yarn lerna bootstrap
            - run: yarn compile

    format:
        <<: *default_env
        steps:
            - checkout
            - *restore_repo_cache
            - run: yarn lerna bootstrap
            - run: yarn format

    lint:
        <<: *default_env
        steps:
            - checkout
            - *restore_repo_cache
            - run: yarn lerna bootstrap
            - run: yarn lint

    test:
        <<: *default_env
        steps:
            - checkout
            - *restore_repo_cache
            - run: yarn lerna bootstrap
            - run: yarn test

    publish:
        <<: *default_env
        steps:
            - checkout
            - *restore_repo_cache
            - run: yarn lerna bootstrap
            - run: yarn publish:ci

workflows:
    build:
        jobs:
            - checkout
            - compile:
                  requires:
                      - checkout
            - format:
                  requires:
                      - checkout
            - lint:
                  requires:
                      - checkout
            - test:
                  requires:
                      - compile
            - publish:
                  filters:
                      branches:
                          only: master
                  requires:
                      - test
